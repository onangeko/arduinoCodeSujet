// Utilisation des types

b1, b2: boolean;
i81, i82: byte;
i161, i162: short;
i321, i322: integer;
ui81, ui82: unsigned byte;
ui161, ui162: unsigned short;
ui321, ui322: unsigned integer;
f321, f322: float;

p1, p2: pin;

s1, s2, s3: string[32];

r1, r2: range of integer;

s1, s2: set of unsigned byte ;

l1, l2: list of integer ;

e1, e2 : enum (A, B, C);

tree: struct {
      left: integer;
      right: integer;
      tag: string[32];
};

begin
	b1 = TRUE;
	b2 = TRUE && b1;
	p1 = PIN_13;
	p2 = p1;
	r1 = [3 .. 67];
	r2 = [1..2] + r1;
	s1 = {3, 4, 5};
	s2 = {4, 5, 6} + s1;
	s3 = {4, 5, 6} * s1;
	l1 = [3, 4, 4, 5];
	l1 = [1, 2, 2] + l1;
	i81 = -127;
	i82 = 1 + i81;
	ui81 = 255;
	ui82 = 1 + 255;
	i161 = -32768;
	i162 = 1 + -32768;
	ui161 = 65535;
	ui162 = 1 + 65535;
	i321 = -2147483648;
	i322 = 1 + -2147483648;
	ui321 = 4294967295;
	ui322 = 1 + 4294967295;
	f321 = 3.14;
end



